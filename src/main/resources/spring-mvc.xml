<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd">

  <!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
  <mvc:annotation-driven/>

  <!-- aspectj aop启用CGliB代理 -->
  <aop:aspectj-autoproxy expose-proxy="true" proxy-target-class="true"/>

  <!-- 扫描controller（controller层注入）  换到 spring-context.xml中会不正常？-->
  <context:component-scan base-package="cn.sdkd.csse.dbcourses.weixin.controller; cn.sdkd.csse.dbcourses.controller;"/>

  <!-- 视图解析器 -->
  <bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="order" value="10"></property>
    <property name="prefix" value="/WEB-INF/views/"></property>
    <property name="suffix" value=".jsp"></property>
  </bean>

  <!-- 对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。
     比如对*.js, *.jpg 等静态资源的处理-->
  <!-- 配置哪些是静态资源，缺省Servlet 直接返回 -->
  <mvc:resources mapping="/static/**" location="/static/" cache-period="31556926"/>
  <mvc:resources mapping="/upload/**" location="/upload/" cache-period="31556926"/>
  <mvc:resources mapping="/favicon.ico" location="/static/style/images/favicon.ico" cache-period="31556926"/>

  <mvc:annotation-driven>
    <mvc:message-converters register-defaults="false">
      <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
      <bean class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8"/>
      </bean>
      <!-- 下载使用 -->
      <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
      <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
      <bean class="org.springframework.http.converter.ResourceRegionHttpMessageConverter"/>
      <!-- json -->
      <ref bean="mappingJacksonHttpMessageConverter" />
    </mvc:message-converters>
  </mvc:annotation-driven>

  <bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    <property name="supportedMediaTypes">
      <list>
        <value>text/plain;charset=UTF-8</value>
        <value>application/json;charset=UTF-8</value>
      </list>
    </property>

  </bean>

  <!-- 设置freeMarker的配置文件路径 -->
  <bean id="freemarkerConfiguration"
        class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <!--注释掉的下方代码是指引freemarker的基本信息的配置位置，因为我已经将配置信息移到了applicationContext文件下，所以这里就没必要存在了，不注释也不会有问题的 -->
    <!--<property name="location" value="classpath:/WEB-INF/config/freemarker.properties" />-->
  </bean>

  <mvc:interceptors>
    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
  </mvc:interceptors>

  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
    <property name="defaultLocale" value="zh_CN"/>
  </bean>


  <!--ViewResolver 视图解析器-->
  <!--用于支持html视图解析-->
  <!--
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
        </property>
        <property name="cache">
            <value>true</value>
        </property>
        -->
  <!--这里需要注意一下，我注释了下面这样一行代码，这行代码的意思就是指引freemarker需要解析的文件的位置。注释掉原因是因为
   applicationContext.xml里有这样一行代码：<property name="templateLoaderPath" value="/WEB-INF/views/" /> 已经指定了视图位置。如果我们这里依然保留下方代码，页面回报406的找不到的错误 -->
  <!--<property name="prefix"><value>/WEB-INF/views/</value></property>-->
  <!--
    <property name="suffix">
        <value>.html</value>
    </property>
    <property name="contentType">
        <value>text/html; charset=UTF-8</value>
    </property>
</bean>
-->

  <!-- 默认首页 -->
  <!--
    <mvc:view-controller path="/" view-name="index"/>
-->

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="3500000"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

</beans>
